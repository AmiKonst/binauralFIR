!function(a){if("object"==typeof exports)module.exports=a();else if("function"==typeof define&&define.amd)define(a);else{var b;"undefined"!=typeof window?b=window:"undefined"!=typeof global?b=global:"undefined"!=typeof self&&(b=self),b.createBinauralFIR=a()}}(function(){return function a(b,c,d){function e(g,h){if(!c[g]){if(!b[g]){var i="function"==typeof require&&require;if(!h&&i)return i(g,!0);if(f)return f(g,!0);throw new Error("Cannot find module '"+g+"'")}var j=c[g]={exports:{}};b[g][0].call(j.exports,function(a){var c=b[g][1][a];return e(c?c:a)},j,j.exports,a,b,c,d)}return c[g].exports}for(var f="function"==typeof require&&require,g=0;g<d.length;g++)e(d[g]);return e}({1:[function(a,b){var c=function(a){"use strict";var b={context:{writable:!0},hrtfData:{writable:!0},convNode:{writable:!0,value:[]},gainNode:{writable:!0,value:[]},outputNode:{writable:!0},oscillatorNode:{writable:!0},gainOscillatorNode:{writable:!0},nextPosition:{writable:!0,value:[]},currentHRTFBufferIndex:{writable:!0,value:-1},bufferIndex:{writable:!0,value:0},changeWhenFinishCrossfading:{writable:!0,value:!1},intervalID:{writable:!0},crossfadeDuration:{writable:!0,value:.02},position:{writable:!0,value:[]},immediate:{writable:!0,value:!1},nextImmediate:{writable:!0,value:!1},finishCrossfadeTime:{writable:!0,value:0},startedAtTime:{writable:!0,value:0},convNodeActive:{writable:!0,value:0},convNodeInactive:{writable:!0,value:1},input:{writable:!0},number:{writable:!0,value:0},id:{writable:!0,value:!1},init:{enumerable:!0,value:function(a){return this.context=window.audioContext,this.setBuffer(a),this.input=this.context.createGain(),this.gainNode[0]=this.context.createGain(),this.gainNode[1]=this.context.createGain(),this.convNode[0]=this.context.createConvolver(),this.convNode[1]=this.context.createConvolver(),this.convNode[0].normalize=!1,this.convNode[1].normalize=!1,this.oscillatorNode=this.context.createOscillator(),this.gainOscillatorNode=this.context.createGain(),this.oscillatorNode.connect(this.gainOscillatorNode),this.gainOscillatorNode.connect(this.gainNode[0]),this.gainOscillatorNode.connect(this.gainNode[1]),this.input.connect(this.gainNode[0]),this.input.connect(this.gainNode[1]),this.gainNode[0].connect(this.convNode[0]),this.gainNode[1].connect(this.convNode[1]),this.gainNode[0].gain.value=1,this.gainNode[1].gain.value=0,this.gainOscillatorNode.gain.value=0,this.oscillatorNode.start(0),this.position[0]=0,this.position[1]=0,this.position[2]=1,this}},connect:{enumerable:!0,value:function(a){return this.convNode[0].connect(a),this.convNode[1].connect(a),this}},disconnect:{enumerable:!0,value:function(a){return this.convNode[0].disconnect(a),this.convNode[1].disconnect(a),this}},loadHRTF:{enumerable:!0,value:function(a){if(a)return this.setBuffer(a),this.setPosition(this.getPosition()[0],this.getPosition()[1],this.getPosition()[2]),this;throw"HRTF setting error"}},setPosition:{enumerable:!0,value:function(a,b,c,d){if(3===arguments.length||4===arguments.length){var e=this.getBufferValue(a,b,c);return e!==this.currentHRTFBufferIndex?this.isCrossfading()===!0?(this.changeWhenFinishCrossfading===!0?clearInterval(this.intervalID):this.changeWhenFinishCrossfading=!0,this.nextPosition[0]=a,this.nextPosition[1]=b,this.nextPosition[2]=c,this.nextImmediate=d||!1,this.intervalID=window.setInterval(this.setLastPosition.bind(this),.005)):(this.nextPosition[0]=a,this.nextPosition[1]=b,this.nextPosition[2]=c,this.reallyStartPosition()):(this.position[0]=a,this.position[1]=b,this.position[2]=c,this.immediate=d||!1),this}throw"Position setting error"}},isCrossfading:{enumerable:!0,value:function(){return 1!==this.gainNode[this.convNodeActive].gain.value||0!==this.gainNode[this.convNodeInactive].gain.value?!0:!1}},reallyStartPosition:{enumerable:!1,value:function(){this.position[0]=this.nextPosition[0],this.position[1]=this.nextPosition[1],this.position[2]=this.nextPosition[2];var a=this.getBufferValue(this.position[0],this.position[1],this.position[2]);this.convNode[this.convNodeInactive].buffer=this.hrtfData[a],this.crossfading(),this.currentHRTFBufferIndex=a,this.updateMemories(),this.changeWhenFinishCrossfading&&(this.changeWhenFinishCrossfading=!1,clearInterval(this.intervalID))}},getTimeBeforeCrossfadingEnd:{enumerable:!0,value:function(){return this.isCrossfading()?this.finishCrossfadeTime-this.context.currentTime:0}},setCrossfadeDuration:{enumerable:!0,value:function(a){if(a)return this.crossfadeDuration=a/1e3,this;throw"CrossfadeDuration setting error"}},getCrossfadeDuration:{enumerable:!0,value:function(){return 1e3*this.crossfadeDuration}},getMetaDataAboutCurrentHRTF:{enumerable:!0,value:function(a){if(a)return"info of the metadata: nonimplemented";throw"metadata getting error"}},getPosition:{enumerable:!0,value:function(){return this.position}},crossfading:{enumerable:!1,value:function(){this.isCrossfading()===!0&&console.log(audioContext.currentTime,"problem!!"),(1!==this.gainNode[this.convNodeActive].gain.value||0!==this.gainNode[this.convNodeInactive].gain.value)&&console.log(audioContext.currentTime,"problem!!"),this.finishCrossfadeTime=this.context.currentTime+this.crossfadeDuration+.02,this.gainNode[this.convNodeActive].gain.setValueAtTime(1,this.context.currentTime+.02),this.gainNode[this.convNodeActive].gain.linearRampToValueAtTime(0,this.context.currentTime+.02+this.crossfadeDuration),this.gainNode[this.convNodeInactive].gain.setValueAtTime(0,this.context.currentTime+.02),this.gainNode[this.convNodeInactive].gain.linearRampToValueAtTime(1,this.context.currentTime+.02+this.crossfadeDuration)}},updateMemories:{enumerable:!1,value:function(){var a=this.convNodeActive;this.convNodeActive=this.convNodeInactive,this.convNodeInactive=a}},setBuffer:{enumerable:!1,value:function(a){if(!a)throw"buffer getting error";this.hrtfData=a}},getBufferValue:{enumerable:!1,value:function(a){if(3===arguments.length)return parseInt(a*this.hrtfData.length/360,10);throw"buffer getting error"}},setLastPosition:{enumerable:!1,value:function(){this.isCrossfading()||this.reallyStartPosition()}}},c=Object.create({},b);return c.init(a)};b.exports=c},{}]},{},[1])(1)});
